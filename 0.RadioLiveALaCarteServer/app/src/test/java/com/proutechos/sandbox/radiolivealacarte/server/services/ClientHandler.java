package com.proutechos.sandbox.radiolivealacarte.server.services;import java.io.*;import java.net.*;import java.nio.file.*;import java.util.*;public class ClientHandler implements Runnable {        private final Socket clientSocket;    private static final String STREAM_URL = "https://stream.radiofrance.fr/franceinfo/franceinfo_hifi.m3u8?id=radiofrance"; // URL du flux HLS    ClientHandler(Socket socket) {            this.clientSocket = socket;        }        @Override        public void run() {            try (BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));                 OutputStream out = clientSocket.getOutputStream()) {                // Lire la première ligne de la requête HTTP                String requestLine = in.readLine();                if (requestLine == null) return;                System.out.println("Requête reçue : " + requestLine);                String[] requestParts = requestLine.split(" ");                if (requestParts.length != 3) return;                String method = requestParts[0];                String resourcePath = requestParts[1];                if (!method.equals("GET")) {                    sendResponse(out, "405 Method Not Allowed", "Méthode non supportée");                    return;                }                // Rediriger la demande vers le flux HLS en direct                URL url = new URL(STREAM_URL);                HttpURLConnection connection = (HttpURLConnection) url.openConnection();                connection.setRequestMethod("GET");                InputStream stream = connection.getInputStream();                String contentType = connection.getContentType();                int contentLength = connection.getContentLength();                sendResponse(out, "200 OK", contentType, stream, contentLength);            } catch (IOException e) {                e.printStackTrace();            } finally {                try {                    clientSocket.close();                } catch (IOException e) {                    e.printStackTrace();                }            }        }        // Méthode pour envoyer une réponse HTTP avec des données        private void sendResponse(OutputStream out, String status, String contentType, InputStream dataStream, int contentLength) throws IOException {            PrintWriter pw = new PrintWriter(out);            pw.println("HTTP/1.1 " + status);            pw.println("Content-Type: " + contentType);            pw.println("Content-Length: " + contentLength);            pw.println();            pw.flush();            byte[] buffer = new byte[4096];            int bytesRead;            while ((bytesRead = dataStream.read(buffer)) != -1) {                out.write(buffer, 0, bytesRead);            }            out.flush();        }        // Méthode pour envoyer une réponse HTTP avec un message texte        private void sendResponse(OutputStream out, String status, String message) throws IOException {            String response = "HTTP/1.1 " + status + "\r\n" +                    "Content-Type: text/plain\r\n" +                    "Content-Length: " + message.length() + "\r\n" +                    "\r\n" +                    message;            out.write(response.getBytes());            out.flush();        }    }