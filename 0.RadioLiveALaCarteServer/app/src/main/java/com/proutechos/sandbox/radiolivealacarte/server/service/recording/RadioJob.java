package com.proutechos.sandbox.radiolivealacarte.server.service.recording;import com.proutechos.sandbox.radiolivealacarte.server.service.streaming.StreamingService;import org.quartz.Job;import org.quartz.JobDataMap;import org.quartz.JobExecutionContext;import org.quartz.JobExecutionException;import java.util.Calendar;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;public class RadioJob implements Job {    public static long calculateTimeDifference(int startHour, int startMinute, int startSeconds,                                               int endHour, int endMinute, int endSeconds) {        // Création des objets Calendar pour les horaires de début et de fin        Calendar startTime = Calendar.getInstance();        startTime.set(Calendar.HOUR_OF_DAY, startHour);        startTime.set(Calendar.MINUTE, startMinute);        startTime.set(Calendar.SECOND, startSeconds);        startTime.set(Calendar.MILLISECOND, 0);        Calendar endTime = Calendar.getInstance();        endTime.set(Calendar.HOUR_OF_DAY, endHour);        endTime.set(Calendar.MINUTE, endMinute);        endTime.set(Calendar.SECOND, endSeconds);        endTime.set(Calendar.MILLISECOND, 0);        // Calcul de la différence en millisecondes        return endTime.getTimeInMillis() - startTime.getTimeInMillis();    }    @Override    public void execute(JobExecutionContext context) throws JobExecutionException {        // Récupérer le JobDataMap        JobDataMap dataMap = context.getJobDetail().getJobDataMap();        // Extraire les paramètres passés au job        int startHour = dataMap.getInt("startHour");        int startMinute = dataMap.getInt("startMinute");        int startSeconds = dataMap.getInt("startSeconds");        int endHour = dataMap.getInt("endHour");        int endMinute = dataMap.getInt("endMinute");        int endSeconds = dataMap.getInt("endSeconds");        int withSegments = dataMap.getInt("withSegments");        String outputFileName = dataMap.getString("outputFileName");        Integer danielMorinVersion = dataMap.getInt("danielMorinVersion");        String url = dataMap.getString("url");        // Appeler la méthode d'enregistrement avec les paramètres dynamiques        StreamingService.getInstance().recordWithSegments(                withSegments, url, outputFileName, calculateTimeDifference(startHour, startMinute, startSeconds, endHour, endMinute, endSeconds), danielMorinVersion        );    }}